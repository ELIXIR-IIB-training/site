name: Update TRAINERS.yaml
on:
  push:
    branches:
      - main # Trigger workflow on commits to main branch
jobs:
  update-trainers:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Install tools
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Extract trainers from Markdown and sort by first name
        run: |
          echo "Extracting trainers data...."
          > _data/TRAINERS.yaml # Clear existing TRAINERS.yaml
          
          declare -A trainers_map # Create an associative array to store trainers

          # Process the most recent folder first
          for dir in pages/training_courses pages/archive/training_courses_2024; do
            for file in $(find "$dir" -name '[0-9]*.md'); do
              if grep -q "### Instructors {#instructors-section}" "$file"; then
                echo "Processing $file..."
                # Extract the 'Instructors' section
                trainers=$(grep -A10 -E "### Instructors {#instructors-section}" "$file" | grep -v "###")
                
                # Update trainers_map with priority to the latest folder
                while IFS= read -r line; do
                  if [[ "$line" =~ ^- ]]; then
                    # Remove asterisks (*) and clean the name
                    name=$(echo "$line" | cut -d',' -f1 | sed 's/- //g' | sed 's/\*//g' | xargs)
                    affiliation=$(echo "$line" | cut -d',' -f2- | xargs)
                    
                    # Add to trainers_map only if the name is not already present
                    if [[ -z "${trainers_map[$name]}" ]]; then
                      trainers_map["$name"]="$affiliation"
                    fi
                  fi
                done <<< "$trainers"
              fi
            done
          done

          # Sort trainers by first name and write to TRAINERS.yaml
          printf "%s\n" "${!trainers_map[@]}" | \
          awk '{
            first_name = $1; # Take the first word as the key for sorting
            print first_name, $0
          }' | sort | \
          awk '{
            sub(/^[^ ]+ /, "", $0); 
            print $0;
          }' | while IFS= read -r sorted_name; do
            # Correctly associate the name with the original affiliation
            affiliation="${trainers_map[$sorted_name]}"
            echo "$sorted_name:" >> _data/TRAINERS.yaml
            echo "    affiliation: $affiliation" >> _data/TRAINERS.yaml
            echo "" >> _data/TRAINERS.yaml
          done



      - name: Commit changes
        run: |
          git config --global user.name 'elixir_training_bot'
          git config --global user.email 'elixir_training_bot@github.com'
          git add _data/TRAINERS.yaml
          git commit -m "Update TRAINERS.yaml"
          git push



